-- Saurav Pokharel
-- CS2550
-- SQL Assignment 10
-- 04/02/2020


--01
INSERT INTO Professors
(professorId, firstName,lastName, streetAddress,
 city, state, zip, phone, hireDate)
VALUES
('9999','Waldo','Wildcat','1234 Stewart Stadium Way',
 'Ogden','UT','84408',NULL, to_date(sysdate));

-- 02
INSERT INTO sections
(sectionId, courseId, sectionStartDate,
 locationId, professorId, capacity, Semester)
VALUES('12345','10521',to_date('11 Jan 2023 09:30 AM','DD Mon YYYY HH:MI AM'),'8194','9999','30','Spr2023');

-- 03
INSERT INTO Registration
(studentId, sectionId, registrationDate, finalClassGrade)
VALUES('2551','12345',sysDate,NULL);

INSERT INTO Registration
(studentId, sectionId, registrationDate, finalClassGrade)
VALUES('1664','12345',sysDate,NULL);

INSERT INTO Registration
(studentId, sectionId, registrationDate, finalClassGrade)
VALUES('4252','12345',sysDate,NULL);

INSERT INTO Registration
(studentId, sectionId, registrationDate, finalClassGrade)
VALUES('3564','12345',sysDate,NULL);

INSERT INTO Registration
(studentId, sectionId, registrationDate, finalClassGrade)
VALUES('2474','12345',sysDate,NULL);

INSERT INTO Registration
(studentId, sectionId, registrationDate, finalClassGrade)
VALUES('3954','12345',sysDate,NULL);

INSERT INTO Registration
(studentId, sectionId, registrationDate, finalClassGrade)
VALUES('3743','12345',sysDate,NULL);

INSERT INTO Registration
(studentId, sectionId, registrationDate, finalClassGrade)
VALUES('2024','12345',sysDate,NULL);

--04
INSERT INTO registration
(studentId, sectionId, registrationDate, finalClassGrade)
(SELECT studentId,'12345',
sysdate, NULL
FROM students
WHERE state='ID' and city='Aberdeen');

--05
UPDATE Professors
SET phone='8016267025'
WHERE professorId='9999';

--06
UPDATE students
SET tuitionBalance=0
WHERE studentId IN 
(SELECT studentID 
FROM students
WHERE state='WY' 
and city='Cody');

--07
UPDATE sections
SET capacity = 50
WHERE sectionId IN
(SELECT s.sectionId
 FROM sections s
 INNER JOIN courses c ON c.courseId = s.courseId
 WHERE c.subjectCode||c.courseNumber = 'CS2550');


--08
SELECT distinct s.firstName,
                s.lastName,
                NVL(t1.NumSections, 0) AS NumSections  
FROM students s
LEFT JOIN registration r
 ON s.studentId = r.studentId
LEFT JOIN 
(SELECT r.studentId, COUNT(*) AS NumSections
 FROM registration r
 INNER JOIN sections sec 
 ON r.sectionId = sec.sectionId
 GROUP BY r.studentId) t1
ON s.studentId = t1.studentId
WHERE s.city = 'Rawlins' AND s.state = 'WY'
ORDER BY s.lastName, 
         s.firstName;


--09
SELECT  distinct p.firstName,
                 p.lastName,
                 p.phone
FROM professors p
INNER JOIN sections s
ON p.professorId=s.professorId
INNER JOIN courses c
ON c.courseId=s.courseId
WHERE c.subjectcode='CS'
AND c.courseNumber=2550
ORDER BY lastName,
         firstName;

--10
SELECT c.courseId, 
       s.sectionId, 
       l.building, 
       l.room,
       n.numstudents
FROM courses c
INNER JOIN sections s ON c.courseId = s.courseId
INNER JOIN locations l ON l.locationId = s.locationId
INNER JOIN 
(SELECT r.sectionId, COUNT(*) AS numstudents
 FROM students s
 INNER JOIN registration r ON s.studentId = r.studentId
 WHERE r.sectionId IN 
(SELECT s.sectionId
 FROM sections s
 INNER JOIN courses c
 ON s.courseId = c.courseId
 WHERE c.subjectcode || c.courseNumber = 'CS2550')
 GROUP BY r.sectionId) n
 ON n.sectionId = s.sectionId
 WHERE l.building = 'TE'  
 GROUP BY s.sectionId, 
          c.courseId, 
          l.building, 
          l.room, 
          n.numstudents
ORDER BY n.numstudents DESC, 
         s.sectionId ASC; 


--11
SELECT c.subjectCode, 
       c.courseNumber,
       l.building, 
       l.room,
       s.sectionId, 
       t.Numstudents
FROM courses c
INNER JOIN sections s
ON c.courseId=s.courseId
INNER JOIN locations l
ON l.locationId=s.locationId
INNER JOIN 
(SELECT sectionID, count(*) As numstudents
FROM registration r
WHERE r.sectionID in 
(SELECT sectionId 
FROM sections s
INNER JOIN locations l
ON l.locationID=s.locationId
WHERE l.building='TE'
ANd l.room='103C')
GROUP BY sectionId
HAVING Count(*)>=9) t
ON t.sectionId=s.sectionId
ORDER BY t.Numstudents Desc,
           subjectcode,
           coursenumber;


--12
SELECT  distinct p.professorId, 
                 p.firstName,
                 p.lastName, 
                 c.subjectCode, 
                 c.coursenumber, 
                 c.coursetitle
FROM professors p
INNER JOIN sections s
ON p.professorId=s.professorId
INNER JOIN courses c
ON c.courseId=s.courseId
WHERE c.subjectcode='CS'
AND c.courseNumber=2550
AND p.professorId NOt IN
(
SELECT professorId
FROM  sections s
INNER JOIN courses c
ON c.courseId=s.courseId
WHERE c.subjectcode||c.courseNumber!='CS2550')
ORDER BY lastName,
         firstName;